{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/generator-form/generator-form.component.ts","./src/app/generator-form/generator-form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'regex-generator';\n}\n","<app-generator-form></app-generator-form>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GeneratorFormComponent } from './generator-form/generator-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GeneratorFormComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms'  \n\n@Component({\n  selector: 'app-generator-form',\n  templateUrl: './generator-form.component.html',\n  styleUrls: ['./generator-form.component.sass']\n})\n\nexport class GeneratorFormComponent implements OnInit {\n\n  myForm!: FormGroup;\n  buildExpression: String = '';\n  expressionList: String[] = [];  //Ensures list of all expressions created can be displayed\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.myForm = new FormGroup({\n      expression: new FormControl(''),\n      doesNot: new FormControl(false),\n      startsWith: new FormControl(false),\n      endsWith: new FormControl(false),\n      multiline: new FormControl(false),\n      ignoreCase: new FormControl(false),\n      isGlobal: new FormControl(false),\n    })\n\n    this.myForm.valueChanges.subscribe({\n      next: this.updatePreview.bind(this),\n      error: this.handleError.bind(this),\n    });\n  }\n  \n  //Can do stuff when form values change\n  updatePreview() {}\n\n  //Handles error if updatePreview subscription has an error\n  handleError(){}\n\n  onSubmit(){\n    //Start fresh each time\n    this.buildExpression = '';\n\n    this.buildExpression += '/'\n    if(this.myForm.value.startsWith)\n      this.buildExpression += '^';\n    this.buildExpression += '[';\n    if(this.myForm.value.doesNot)\n      this.buildExpression += '^';\n    this.buildExpression += this.myForm.value.expression;\n    this.buildExpression += ']';\n    if(this.myForm.value.endsWith)\n      this.buildExpression += '$';\n    this.buildExpression += '/';\n    if(this.myForm.value.multiline)\n      this.buildExpression += 'm';\n    if(this.myForm.value.ignoreCase)\n      this.buildExpression += 'i';\n    if(this.myForm.value.isGlobal)\n      this.buildExpression += 'g';\n\n    this.expressionList.unshift(this.buildExpression);\n  }\n\n  clearList(){\n    this.expressionList = [];\n  }\n}\n","<form [formGroup]='myForm' (ngSubmit)='onSubmit()'>\n<div>\n    <label>\n        Does Not\n    </label>\n    <input formControlName='doesNot' type='checkbox'>\n    \n    <label>\n        Expression (do not include brackets)\n    </label>\n    <input formControlName='expression'>\n    \n    <label>\n        Starts With\n    </label>\n    <input formControlName='startsWith' type='checkbox'>\n\n    <label>\n        Ends With\n    </label>\n    <input formControlName='endsWith' type='checkbox'>\n\n    <label>\n        Ignore Case\n    </label>\n    <input formControlName='ignoreCase' type='checkbox'>\n\n    <label>\n        MultiLine\n    </label>\n    <input formControlName='multiline' type='checkbox'>\n\n    <label>\n        Global\n    </label>\n    <input formControlName='isGlobal' type='checkbox'>\n\n</div>\n<button type='reset'>Reset</button>\n<button type=\"submit\">Generate Regex</button>\n</form>\n\n<div>\n    <button (click)=\"clearList()\" type=\"button\">Clear List</button>\n    <span *ngFor='let element of expressionList'>\n        {{ element }}\n    </span>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}